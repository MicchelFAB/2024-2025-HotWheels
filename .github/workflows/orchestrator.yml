name: Orchestrator

on:
  workflow_run:
    workflows: [Car Controls, Cluster]
    types:
      - completed
    branches:
      - test-coverage

jobs:
  check-and-trigger-docs:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
            sudo apt update
            sudo apt install -y gh

      - name: Check status of both workflows
        id: check
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          REPO="${{ github.repository }}"
          BRANCH="${{ github.event.workflow_run.head_branch }}"
          SHA="${{ github.event.workflow_run.head_sha }}"

          echo "Checking workflow runs for $REPO on branch $BRANCH and commit $SHA"

          # Controls: Must match head_sha, status completed, and conclusion success
          CONTROLS=$(gh api -H "Accept: application/vnd.github+json" \
            /repos/$REPO/actions/workflows/deploy-controls.yml/runs \
            --jq ".workflow_runs[] | select(.head_sha == \"$SHA\" and .status == \"completed\" and .conclusion == \"success\") | .id" | head -n 1)

          # Cluster: Same filters
          CLUSTER=$(gh api -H "Accept: application/vnd.github+json" \
            /repos/$REPO/actions/workflows/deploy-cluster.yml/runs \
            --jq ".workflow_runs[] | select(.head_sha == \"$SHA\" and .status == \"completed\" and .conclusion == \"success\") | .id" | head -n 1)

          echo "Car controls workflow run ID on commit $SHA: $CONTROLS"
          echo "Cluster workflow run ID on commit $SHA: $CLUSTER"

          if [[ -z "$CONTROLS" || -z "$CLUSTER" ]]; then
            echo "One or both workflows have not completed successfully yet."
            echo "trigger_docs=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "Both workflows completed successfully on the same commit."
          echo "trigger_docs=true" >> $GITHUB_OUTPUT


      - name: Trigger documentation workflow
        if: steps.check.outputs.trigger_docs == 'true'
        run: |
          gh workflow run deploy-docs.yml --ref ${{ github.event.workflow_run.head_branch }}
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
